#+TITLE: Asok Gems and How to Polish Them
#+AUTHOR: Marcel Lauhoff
#+OPTIONS: H:4 toc:2 num:nil
#+PROPERTY: header-args :noweb no-export
#+PROPERTY: header-args :var source="/compile2/ceph/wip"
#+PROPERTY: header-args+ :var build="/compile2/ceph/wip/build"
#+PROPERTY: header-args+ :var out="/compile2/ceph/wip/build/out"
#+PROPERTY: header-args+ :var asok="/compile2/ceph/wip/build/asok"
#+PROPERTY: header-args+ :var ceph_config="/compile2/ceph/wip/build/ceph.conf"
#+PROPERTY: header-args+ :var run_id="297838a4-5a65-4c97-a708-43f35c4b1f46"

* Notebook Tools
#+caption: Convenience snippet. Used by most scripts later on. Re-evaluate when restarting the cluster.
#+name: env
#+begin_src bash
source  $build/vstart_environment.sh
#+end_src

#+RESULTS: env

#+caption: Functions to get lists of Ceph daemons
#+name: get_daemons
#+begin_src bash
mons () {
    ceph -f json mon dump 2>/dev/null | jq -r '"mon.\(.mons[].name)"'
}
osds () {
    ceph -f json osd dump 2>/dev/null | jq -r '"osd.\(.osds[].osd)"'
}
mgrs () {
    ceph -f json mgr dump 2>/dev/null | jq -r '"mgr.\(.active_name)"'
}

ceph_daemons () {
    mons
    osds
    mgrs
}
#+end_src

#+RESULTS: get_daemons

* How to Access Admin Sockets
** UNIX Socket Protocol
The protocol is JSON over a UNIX Socket.

#+begin_src json
{"prefix": "help", "format": "json-pretty"}
#+end_src

We can simply send that with netcat.

#+begin_src bash  :results output verbatim
echo '{"prefix": "help", "format": "json-pretty"}' | nc -U $out/radosgw.8000.asok | tail -c+5
#+end_src

#+RESULTS:
#+begin_example
{
    "cache erase": "cache erase target: erase element from cache",
    "cache inspect": "cache inspect target: print cache element",
    "cache list": "cache list [filter_str]: list object cache, possibly matching substrings",
    "cache zap": "cache zap: erase all elements from cache",
    "config diff": "dump diff of current config and default config",
    "config diff get": "dump diff get <field>: dump diff of current and default config setting <field>",
    "config get": "config get <field>: get the config value",
    "config help": "get config setting schema and descriptions",
    "config set": "config set <field> <val> [<val> ...]: set a config variable",
    "config show": "dump current config settings",
    "config unset": "config unset <field>: unset a config variable",
    "counter dump": "dump all labeled and non-labeled counters and their values",
    "counter schema": "dump all labeled and non-labeled counters schemas",
    "cr dump": "dump current coroutines stack state",
    "dump_mempools": "get mempool stats",
    "get_command_descriptions": "list available commands",
    "git_version": "get git sha1",
    "help": "list available commands",
    "injectargs": "inject configuration arguments into running daemon",
    "log dump": "dump recent log entries to log file",
    "log flush": "flush log entries to log file",
    "log reopen": "reopen log file",
    "messenger dump": "dump messenger status",
    "objecter_requests": "show in-progress osd requests",
    "perf dump": "dump non-labeled counters and their values",
    "perf histogram dump": "dump perf histogram values",
    "perf histogram schema": "dump perf histogram schema",
    "perf reset": "perf reset <name>: perf reset all or one perfcounter name",
    "perf schema": "dump non-labeled counters schemas",
    "raise": "deliver the <signal> to the daemon process, optionally delaying <after> seconds; when --after is used, the program will fork before sleeping, which allows to schedule signal delivery to a stopped daemon; it's possible to --cancel a pending signal delivery. <signal> can be in the forms '9', '-9', 'kill', '-KILL'. Use `raise -l` to list known signal names.",
    "rotate-key": "rotate live authentication key",
    "sync trace active": "show active multisite sync entities information",
    "sync trace active_short": "show active multisite sync entities entries",
    "sync trace history": "sync trace history [filter_str]: show history of multisite tracing information",
    "sync trace show": "sync trace show [filter_str]: show current multisite tracing information",
    "version": "get ceph version"
}
#+end_example

Why did we use =tail -c+5=? There is a binary 4 byte header containing the payload length as an unsigned 32 bit integer:

#+begin_src bash  :results output verbatim
echo '{"prefix": "help", "format": "json-pretty"}' | nc -U $out/radosgw.8000.asok  | head -c4 | xxd
#+end_src

#+RESULTS:
: 00000000: 0000 0a49                                ...I

*** Errors
Are returned inline as text.

#+begin_src c++
  // Unfortunately, the asok wire protocol does not let us pass an error code,
  // and many asok command implementations return helpful error strings.  So,
  // let's prepend an error string to the output if there is an error code.
  if (rval < 0) {
    ostringstream ss;
    ss << "ERROR: " << cpp_strerror(rval) << "\n";
    ss << err.str() << "\n";
    /* ... */
#+end_src


** librados
Ceph service daemons (osd, mgr, mon) not only open admin sockets,
but also allow access via librados.

The following code fetches version information from selected Ceph service daemons:

#+begin_src python :results value verbatim
#!/usr/bin/env python3
import rados
import json

cluster = rados.Rados(conffile=ceph_config)
cluster.connect()
return ", ".join(json.loads(x)["release"] for x in [
    cluster.osd_command(osdid=0, cmd='{"prefix": "version"}', inbuf=b"")[1],
    cluster.mon_command(target="a", cmd='{"prefix": "version"}', inbuf=b"")[1],
    cluster.mgr_command(target="", cmd='{"prefix": "version"}', inbuf=b"")[1],
])
#+end_src

#+RESULTS:
: tentacle, tentacle, tentacle

** =ceph= tool
- =ceph daemon $filename= (UNIX Socket)
- =ceph tell $service= (librados)

** Python Asok Wrapper
#+name: simpleasok
#+begin_src python
#!/usr/bin/env python3
import rados
import cephfs
import json
import pathlib
import logging
import socket
from typing import Annotated, Any, Literal, NamedTuple, Optional, Tuple, Union, cast, override

LOG = logging.getLogger("asok")
CEPH_COMMAND_TIMEOUT_SECONDS = 0

from pydantic import (
    BaseModel,
    Field,
    StrictBool,
    StrictFloat,
    StrictInt,
    StrictStr,
    field_validator,
)

class CephTargetBase(BaseModel):
    class Config:
        frozen = True


class CephOSDTarget(CephTargetBase):
    type: Literal["osd"]
    id: int

    def to_tuple(self):
        return (self.type, self.id)

    @override
    def __str__(self) -> str:
        return f"osd.{self.id}"


class CephMonTarget(CephTargetBase):
    type: Literal["mon"]
    name: str

    def to_tuple(self):
        return (self.type, self.name)

    @override
    def __str__(self) -> str:
        if self.name:
            return f"mon.{self.name}"
        else:
            return "mon"


class CephMgrTarget(CephTargetBase):
    type: Literal["mgr"]
    name: str

    def to_tuple(self):
        return (self.type, self.name)

    @override
    def __str__(self) -> str:
        return f"mgr.{self.name}"


class CephAsokTarget(CephTargetBase):
    type: Literal["asok"]
    path: pathlib.Path

    def to_tuple(self):
        return (self.type, self.path)

    @override
    def __str__(self) -> str:
        return self.path.name

class CephMdsTarget(CephTargetBase):
    type: Literal["mds"]
    name: str

    def to_tuple(self):
        return (self.type, self.path)

    @override
    def __str__(self) -> str:
        return f"mds.{self.name}"

CephTarget = Annotated[
    CephOSDTarget | CephMonTarget | CephMgrTarget | CephAsokTarget | CephMdsTarget,
    Field(discriminator="type"),
]

ConfigVariant = Union[StrictBool, StrictInt, StrictFloat, StrictStr]

class CephCommandError(Exception):
    pass

def asok_command(path: pathlib.Path, cmd: str):
    cmd += "\0"
    with socket.socket(socket.AF_UNIX, socket.SOCK_STREAM) as sock:
        sock.connect(path.as_posix())
        LOG.debug("ASOK: %s --> %s", path, cmd)
        sock.sendall(cmd.encode("utf-8"))
        response_bytes = b""
        while True:
            chunk = sock.recv(4096)
            if not chunk:
                break
            response_bytes += chunk
        LOG.debug("ASOK: %s <-- %s", path, response_bytes)
    if b"ERROR:" in response_bytes:
        raise CephCommandError(f'Ceph asok command "{cmd}" failed: {response_bytes}')
    return 0, response_bytes[4:], b""


def target_command(
    target: CephTarget, cluster: rados.Rados, cmd: str
) -> tuple[str, str]:
    match target:
        case CephOSDTarget(type="osd", id=osdid):
            ret, outs, outbuf = cluster.osd_command(
                osdid=osdid, cmd=cmd, inbuf=b"", timeout=CEPH_COMMAND_TIMEOUT_SECONDS
            )
        case CephMonTarget(type="mon", name=monid):
            ret, outs, outbuf = cluster.mon_command(
                cmd=cmd, inbuf=b"", timeout=CEPH_COMMAND_TIMEOUT_SECONDS, target=monid
            )
        case CephMgrTarget(type="mgr", name=mgr):
            ret, outs, outbuf = cluster.mgr_command(
                cmd=cmd, inbuf=b"", timeout=CEPH_COMMAND_TIMEOUT_SECONDS, target=mgr
            )
        case CephMdsTarget(type="mds", name=mds):
            fs = cephfs.LibCephFS(rados_inst=cluster)
            fs.init()
            ret, outs, outbuf = fs.mds_command(
                mds, cmd, b""
            )
            fs.shutdown()
        case CephAsokTarget(type="asok", path=path):
            ret, outs, outbuf = asok_command(path, cmd)

    LOG.debug("cmd %r ret: %r", cmd, ret)

    if ret == 0:
        if isinstance(outs, bytes):
            outs = outs.decode("utf-8")
        if isinstance(outbuf, bytes):
            outbuf = outbuf.decode("utf-8")
        return outs, outbuf
    raise CephCommandError(f'Ceph command "{cmd}" failed with {ret}: {outs}')


def command_outs(
    cluster: rados.Rados,
    target: CephTarget = CephMonTarget(type="mon", name=""),
    ,**kwargs: Any,
) -> str:
    outs, _ = target_command(target, cluster, json.dumps(kwargs))
    return outs.strip()


def command_json(
    cluster: rados.Rados,
    target: CephTarget = CephMonTarget(type="mon", name=""),
    ,**kwargs: Any,
) -> Any:
    kwargs["format"] = "json"
    outs, _ = target_command(target, cluster, json.dumps(kwargs))
    try:
        j = json.loads(outs)
    except json.JSONDecodeError as ex:
        LOG.error("JSON parse failed: %s", ex, exc_info=True)
        ex.add_note(outs)
        raise
    return j


def command_lines(
    cluster: rados.Rados,
    target: CephTarget = CephMonTarget(type="mon", name=""),
    ,**kwargs: Any,
) -> list[str]:
    outs, _ = target_command(target, cluster, json.dumps(kwargs))
    return [line for line in outs.splitlines() if line]

def get_inventory(cluster: rados.Rados) -> dict[str, list[CephTarget]]:
    fs_dump = command_json(cluster, CephMonTarget(type="mon", name=""), prefix="fs dump")
    return {
        "osd": [
            CephOSDTarget(type="osd", id=int(osd))
            for osd in command_lines(cluster, prefix="osd ls")
        ],
        "mon": [
            CephMonTarget(type="mon", name=m["name"])
            for m in command_json(cluster, prefix="mon dump")["mons"]
        ],
        "mgr": [
            CephMgrTarget(
                type="mgr", name=command_json(cluster, prefix="mgr dump")["active_name"]
            )
        ],
        "mds" :
            [CephMdsTarget(type="mds", name=info["name"]) for info in fs_dump["standbys"]] +
            [CephMdsTarget(type="mds", name=info["name"]) for fs in fs_dump["filesystems"] for info in fs["mdsmap"]["info"].values()],
        "rgw":
            [CephAsokTarget(type="asok", path=pathlib.Path(out, "radosgw.8000.asok"))]
    }


def connect(conffile: pathlib.Path) -> rados.Rados:
    cluster = rados.Rados(conffile=conffile.as_posix())
    cluster.connect()
    LOG.info("Connected to cluster %s", cluster.get_fsid())
    return cluster
#+end_src

#+RESULTS: simpleasok
: None

#+name: messenger_dump
#+begin_src python :noweb no-export
from datetime import timedelta

class EntityNameT(BaseModel):
    type: str
    num: int


class EntityName(BaseModel):
    type: int
    id: str


class EntityAddr(BaseModel):
    type: str
    addr: str
    nonce: int

    def human(self) -> str:
        if self.type == "none":
            return "∅"
        elif self.type == "any":
            return f"#{str(self.nonce)}"
        else:
            return f"{self.type}/{self.addr}#{str(self.nonce)}"


class AddrVec(BaseModel):
    addrvec: list[EntityAddr]


class Socket(BaseModel):
    socket_fd: int | None
    worker_id: int | None


class DispatchQueue(BaseModel):
    length: int
    max_age_ago: str  # TODO support utimespan_str


class ConnectionStatus(BaseModel):
    connected: bool
    loopback: bool

    def connected_human(self) -> str:
        return "✔" if self.connected else "𐄂"


def format_timedelta_compact(d: timedelta) -> str:
    total_sec = d.total_seconds()
    if total_sec >= 1:
        return f"{total_sec:.3f} s"
    elif total_sec >= 1e-3:
        return f"{total_sec * 1e3:.3f} ms"
    elif total_sec == 0:
        return "0"
    else:
        return f"{total_sec * 1e6:.0f} µs"


class TCPInfo(BaseModel):
    tcpi_state: str
    tcpi_retransmits: int
    tcpi_probes: int
    tcpi_backoff: int
    tcpi_rto: timedelta = Field(alias="tcpi_rto_us")
    tcpi_ato: timedelta = Field(alias="tcpi_ato_us")
    tcpi_snd_mss: int
    tcpi_rcv_mss: int
    tcpi_unacked: int
    tcpi_lost: int
    tcpi_retrans: int
    tcpi_pmtu: int
    tcpi_rtt: timedelta = Field(alias="tcpi_rtt_us")
    tcpi_rttvar: timedelta = Field(alias="tcpi_rttvar_us")
    tcpi_total_retrans: int
    tcpi_last_data_sent: timedelta = Field(alias="tcpi_last_data_sent_ms")
    tcpi_last_ack_sent: timedelta = Field(alias="tcpi_last_ack_sent_ms")
    tcpi_last_data_recv: timedelta = Field(alias="tcpi_last_data_recv_ms")
    tcpi_last_ack_recv: timedelta = Field(alias="tcpi_last_ack_recv_ms")
    tcpi_options: list[str]

    @field_validator("tcpi_rto", "tcpi_ato", "tcpi_rtt", "tcpi_rttvar", mode="before")
    @classmethod
    def us_timedelta(cls, value: int) -> timedelta:
        return timedelta(milliseconds=value / 1000)

    @field_validator(
        "tcpi_last_data_sent",
        "tcpi_last_ack_sent",
        "tcpi_last_data_recv",
        "tcpi_last_ack_recv",
        mode="before",
    )
    @classmethod
    def ms_timedelta(cls, value: int) -> timedelta:
        return timedelta(milliseconds=value)

    def human(self, k: str) -> str:
        v = getattr(self, k)
        if v:
            if isinstance(v, timedelta):
                return format_timedelta_compact(v)
            else:
                return str(v)
        else:
            return ""


class Peer(BaseModel):
    entity_name: EntityName
    type: str
    id: int
    global_id: int
    addr: AddrVec

    def human(self):
        return f"{self.global_id}/{self.id}" if self.id != -1 else "∅"


class ProtocolV2Crypto(BaseModel):
    rx: str
    tx: str


class ProtocolV2Compression(BaseModel):
    rx: str
    tx: str


class ProtocolV1(BaseModel):
    state: str
    connect_seq: int
    peer_global_seq: int
    con_mode: Optional[str]


class ProtocolV2(BaseModel):
    state: str
    connect_seq: int
    peer_global_seq: int
    con_mode: Optional[str]
    rev1: bool
    crypto: ProtocolV2Crypto
    compression: ProtocolV2Compression


class Protocol(BaseModel):
    v1: Optional[ProtocolV1] = None
    v2: Optional[ProtocolV2] = None

    def crypto(self) -> str:
        if self.v2:
            crypto = self.v2.crypto
            if crypto.rx == crypto.tx:
                return crypto.rx
            else:
                return f"{crypto.rx}/{crypto.tx}"
        else:
            return "-"

    def compression(self) -> str:
        if self.v2:
            comp = self.v2.compression
            if comp.rx == comp.tx:
                return comp.rx
            else:
                return f"{comp.rx}/{comp.tx}"
        else:
            return "-"

    def mode(self) -> str:
        if self.v2:
            return self.v2.con_mode or ""
        if self.v1:
            return self.v1.con_mode or ""
        return ""


class AsyncConnection(BaseModel):
    state: str
    messenger_nonce: int
    status: ConnectionStatus
    socket_fd: int | None
    tcp_info: TCPInfo | None
    conn_id: int
    peer: Peer
    last_connect_started_ago: str  # TODO support timepan_str
    last_active_ago: str
    recv_start_time_ago: str
    last_tick_id: int
    socket_addr: EntityAddr
    target_addr: EntityAddr
    port: int
    protocol: Protocol
    worker_id: int


class Connection(BaseModel):
    addrvec: list[EntityAddr]
    async_connection: AsyncConnection


class Messenger(BaseModel):
    nonce: int
    my_name: EntityNameT
    my_addrs: AddrVec
    listen_sockets: list[Socket] = []
    dispatch_queue: DispatchQueue
    connections_count: int
    connections: list[Connection]
    anon_conns: list[AsyncConnection]
    accepting_conns: list[AsyncConnection]
    deleted_conns: list[AsyncConnection]
    local_connection: list[AsyncConnection]

    def direction(self, connection: AsyncConnection):
        if connection.socket_addr in self.my_addrs.addrvec:
            return "IN"
        else:
            return "OUT"


class MessengerDump(BaseModel):
    name: str
    messenger: Messenger

def discover_messengers(cluster: rados.Rados, target: CephTarget) -> list[str]:
    try:
        return command_json(cluster, target, prefix="messenger dump")["messengers"]
    except CephCommandError:
        LOG.error(
            'Failed to discover messengers on %s. "messenger dump" supported?',
            target,
        )
        return []


def dump_messenger(
    cluster: rados.Rados, target: CephTarget, msgr: str
) -> Messenger | None:
    try:
        return MessengerDump.model_validate_json(
            target_command(
                target,
                cluster,
                json.dumps(
                    {
                        "prefix": "messenger dump",
                        "msgr": msgr,
                        "tcp_info": True,
                        "dumpcontents:all": True,
                    }
                ),
            )[0]
        ).messenger
    except CephCommandError as ex:
        LOG.error('Messenger "%s" dump on %s failed: %s', msgr, target, ex)
        return None

def dump_messengers(
    cluster: rados.Rados, target: CephTarget, msgrs: list[str]
) -> dict[str, Messenger]:
    result: dict[str, Messenger] = {}
    for msgr in msgrs:
        dump = dump_messenger(cluster, target, msgr)
        if dump:
            result[msgr] = dump
    return result

#+end_src

#+RESULTS: messenger_dump


* Treasure Maps, Fallen Trees
/Operator please/

** How many unique commands are there?
#+begin_src python :noweb no-export :tangle map.py :results value table
<<simpleasok>>
from collections import defaultdict

cluster = connect(pathlib.Path(ceph_config))
unique_commands = set()
for targets in get_inventory(cluster).values():
    target = next(iter(targets))
    h = command_json(cluster, target, prefix="help")
    for k in h.keys():
        unique_commands.add(k)
return len(unique_commands)
#+end_src

#+RESULTS:
| 179 |

** How many command per service type?
#+begin_src python :noweb no-export :tangle map.py :results value table
<<simpleasok>>
from collections import defaultdict

cluster = connect(pathlib.Path(ceph_config))
target_commands = defaultdict(lambda :0)
for group, targets in get_inventory(cluster).items():
    target = next(iter(targets))
    h = command_json(cluster, target, prefix="help")
    for _ in h:
        target_commands[group] += 1
return target_commands
#+end_src

#+RESULTS:
| osd | 117 |
| mon |  42 |
| mgr |  36 |
| mds |  80 |
| rgw |  36 |

** Which command is available where?
#+begin_src python :noweb no-export :tangle map.py :results value table
<<simpleasok>>
from collections import defaultdict

cluster = connect(pathlib.Path(ceph_config))
help = defaultdict(lambda : [set(), str()])
for group, targets in get_inventory(cluster).items():
    target = next(iter(targets))
    h = command_json(cluster, target, prefix="help")
    for k, v in h.items():
        help[k][0].add(group)
        help[k][1] = v
return [(f"={k}=", v[0], v[1]) for k, v in help.items()]
#+end_src

#+name: all_commands
#+RESULTS:
| =bench=                                                  | (osd)                 | OSD benchmark: write <count> <size>-byte objects(with <obj_size> <obj_num>), (default count=1G default size=4MB). Results in log.                                                                                                                                                                                                                                    |     |
| =bluefs debug_inject_read_zeros=                         | (osd)                 | Injects 8K zeros into next BlueFS read. Debug only.                                                                                                                                                                                                                                                                                                                  |     |
| =bluefs files list=                                      | (osd)                 | print files in bluefs                                                                                                                                                                                                                                                                                                                                                |     |
| =bluefs stats=                                           | (osd)                 | Dump internal statistics for bluefs.                                                                                                                                                                                                                                                                                                                                 |     |
| =bluestore allocator dump block=                         | (osd)                 | dump allocator free regions                                                                                                                                                                                                                                                                                                                                          |     |
| =bluestore allocator dump bluefs-db=                     | (osd)                 | dump allocator free regions                                                                                                                                                                                                                                                                                                                                          |     |
| =bluestore allocator dump bluefs-wal=                    | (osd)                 | dump allocator free regions                                                                                                                                                                                                                                                                                                                                          |     |
| =bluestore allocator fragmentation block=                | (osd)                 | give allocator fragmentation (0-no fragmentation, 1-absolute fragmentation)                                                                                                                                                                                                                                                                                          |     |
| =bluestore allocator fragmentation bluefs-db=            | (osd)                 | give allocator fragmentation (0-no fragmentation, 1-absolute fragmentation)                                                                                                                                                                                                                                                                                          |     |
| =bluestore allocator fragmentation bluefs-wal=           | (osd)                 | give allocator fragmentation (0-no fragmentation, 1-absolute fragmentation)                                                                                                                                                                                                                                                                                          |     |
| =bluestore allocator fragmentation histogram block=      | (osd)                 | build allocator free regions state histogram                                                                                                                                                                                                                                                                                                                         |     |
| =bluestore allocator fragmentation histogram bluefs-db=  | (osd)                 | build allocator free regions state histogram                                                                                                                                                                                                                                                                                                                         |     |
| =bluestore allocator fragmentation histogram bluefs-wal= | (osd)                 | build allocator free regions state histogram                                                                                                                                                                                                                                                                                                                         |     |
| =bluestore allocator score block=                        | (osd)                 | give score on allocator fragmentation (0-no fragmentation, 1-absolute fragmentation)                                                                                                                                                                                                                                                                                 |     |
| =bluestore allocator score bluefs-db=                    | (osd)                 | give score on allocator fragmentation (0-no fragmentation, 1-absolute fragmentation)                                                                                                                                                                                                                                                                                 |     |
| =bluestore allocator score bluefs-wal=                   | (osd)                 | give score on allocator fragmentation (0-no fragmentation, 1-absolute fragmentation)                                                                                                                                                                                                                                                                                 |     |
| =bluestore bluefs device info=                           | (osd)                 | Shows space report for bluefs devices. This also includes an estimation for space available to bluefs at main device. alloc_size, if set, specifies the custom bluefs allocation unit size for the estimation above.                                                                                                                                                 |     |
| =bluestore collections=                                  | (osd)                 | list all collections                                                                                                                                                                                                                                                                                                                                                 |     |
| =bluestore compression stats=                            | (osd)                 | print compression stats, per collection                                                                                                                                                                                                                                                                                                                              |     |
| =bluestore list=                                         | (osd)                 | list objects in specific collection                                                                                                                                                                                                                                                                                                                                  |     |
| =bluestore onode metadata=                               | (osd)                 | print object internals                                                                                                                                                                                                                                                                                                                                               |     |
| =cache drop=                                             | (osd mds)             | trim cache and optionally request client to release all caps and flush the journal                                                                                                                                                                                                                                                                                   |     |
| =cache status=                                           | (osd mds)             | show cache status                                                                                                                                                                                                                                                                                                                                                    |     |
| =calc_objectstore_db_histogram=                          | (osd)                 | Generate key value histogram of kvdb(rocksdb) which used by bluestore                                                                                                                                                                                                                                                                                                |     |
| =clear_shards_repaired=                                  | (osd)                 | clear num_shards_repaired to clear health warning                                                                                                                                                                                                                                                                                                                    |     |
| =cluster_log=                                            | (osd)                 | log a message to the cluster log                                                                                                                                                                                                                                                                                                                                     |     |
| =compact=                                                | (mon osd)             | cause compaction of monitor's RocksDB storage                                                                                                                                                                                                                                                                                                                        |     |
| =config diff=                                            | (rgw mds mon osd mgr) | dump diff of current config and default config                                                                                                                                                                                                                                                                                                                       |     |
| =config diff get=                                        | (rgw mds mon osd mgr) | dump diff get <field>: dump diff of current and default config setting <field>                                                                                                                                                                                                                                                                                       |     |
| =config get=                                             | (rgw mds mon osd mgr) | config get <field>: get the config value                                                                                                                                                                                                                                                                                                                             |     |
| =config help=                                            | (rgw mds mon osd mgr) | get config setting schema and descriptions                                                                                                                                                                                                                                                                                                                           |     |
| =config set=                                             | (rgw mds mon osd mgr) | config set <field> <val> [<val> ...]: set a config variable                                                                                                                                                                                                                                                                                                          |     |
| =config show=                                            | (rgw mds mon osd mgr) | dump current config settings                                                                                                                                                                                                                                                                                                                                         |     |
| =config unset=                                           | (rgw mds mon osd mgr) | config unset <field>: unset a config variable                                                                                                                                                                                                                                                                                                                        |     |
| =counter dump=                                           | (rgw mds mon osd mgr) | dump all labeled and non-labeled counters and their values                                                                                                                                                                                                                                                                                                           |     |
| =counter schema=                                         | (rgw mds mon osd mgr) | dump all labeled and non-labeled counters schemas                                                                                                                                                                                                                                                                                                                    |     |
| =cpu_profiler=                                           | (osd mds)             | run cpu profiling on daemon                                                                                                                                                                                                                                                                                                                                          |     |
| =debug dump_missing=                                     | (osd)                 | dump missing objects to a named file                                                                                                                                                                                                                                                                                                                                 |     |
| =debug kick_recovery_wq=                                 | (osd)                 | set osd_recovery_delay_start to <val>                                                                                                                                                                                                                                                                                                                                |     |
| =deep-scrub=                                             | (osd)                 | Trigger a deep scrub                                                                                                                                                                                                                                                                                                                                                 |     |
| =dump_blocked_ops=                                       | (osd mds mgr)         | show the blocked ops currently in flight                                                                                                                                                                                                                                                                                                                             |     |
| =dump_blocked_ops_count=                                 | (osd mds mgr)         | show the count of blocked ops currently in flight                                                                                                                                                                                                                                                                                                                    |     |
| =dump_blocklist=                                         | (osd)                 | dump blocklisted clients and times                                                                                                                                                                                                                                                                                                                                   |     |
| =dump_historic_ops=                                      | (mon osd mds mgr)     | show recent ops                                                                                                                                                                                                                                                                                                                                                      |     |
| =dump_historic_ops_by_duration=                          | (mon osd mds mgr)     | show recent ops, sorted by op duration                                                                                                                                                                                                                                                                                                                               |     |
| =dump_historic_slow_ops=                                 | (mon osd mgr)         | show slowest recent ops                                                                                                                                                                                                                                                                                                                                              |     |
| =dump_mempools=                                          | (rgw mds mon osd mgr) | get mempool stats                                                                                                                                                                                                                                                                                                                                                    |     |
| =dump_objectstore_kv_stats=                              | (osd)                 | print statistics of kvdb which used by bluestore                                                                                                                                                                                                                                                                                                                     |     |
| =dump_op_pq_state=                                       | (osd)                 | dump op queue state                                                                                                                                                                                                                                                                                                                                                  |     |
| =dump_ops_in_flight=                                     | (mon osd mds mgr)     | show the ops currently in flight                                                                                                                                                                                                                                                                                                                                     |     |
| =dump_osd_network=                                       | (osd mgr)             | Dump osd heartbeat network ping times                                                                                                                                                                                                                                                                                                                                |     |
| =dump_osd_pg_stats=                                      | (osd)                 | Dump OSD PGs' statistics                                                                                                                                                                                                                                                                                                                                             |     |
| =dump_pg_recovery_stats=                                 | (osd)                 | dump pg recovery statistics                                                                                                                                                                                                                                                                                                                                          |     |
| =dump_pgstate_history=                                   | (osd)                 | show recent state history                                                                                                                                                                                                                                                                                                                                            |     |
| =dump_pool_statfs=                                       | (osd)                 | Dump store's statistics for the given pool                                                                                                                                                                                                                                                                                                                           |     |
| =dump_recovery_reservations=                             | (osd)                 | show recovery reservations                                                                                                                                                                                                                                                                                                                                           |     |
| =dump_scrub_reservations=                                | (osd)                 | show scrub reservations                                                                                                                                                                                                                                                                                                                                              |     |
| =dump_scrubs=                                            | (osd)                 | print scheduled scrubs                                                                                                                                                                                                                                                                                                                                               |     |
| =dump_watchers=                                          | (osd)                 | show clients which have active watches, and on which objects                                                                                                                                                                                                                                                                                                         |     |
| =flush_journal=                                          | (osd)                 | flush the journal to permanent store                                                                                                                                                                                                                                                                                                                                 |     |
| =flush_pg_stats=                                         | (osd)                 | flush pg stats                                                                                                                                                                                                                                                                                                                                                       |     |
| =flush_store_cache=                                      | (osd)                 | Flush bluestore internal cache                                                                                                                                                                                                                                                                                                                                       |     |
| =get_command_descriptions=                               | (rgw mds mon osd mgr) | list available commands                                                                                                                                                                                                                                                                                                                                              |     |
| =get_heap_property=                                      | (osd)                 | get malloc extension heap property                                                                                                                                                                                                                                                                                                                                   |     |
| =get_latest_osdmap=                                      | (osd)                 | force osd to update the latest map from the mon                                                                                                                                                                                                                                                                                                                      |     |
| =get_mapped_pools=                                       | (osd)                 | dump pools whose PG(s) are mapped to this OSD.                                                                                                                                                                                                                                                                                                                       |     |
| =getomap=                                                | (osd)                 | output entire object map                                                                                                                                                                                                                                                                                                                                             |     |
| =git_version=                                            | (rgw mds mon osd mgr) | get git sha1                                                                                                                                                                                                                                                                                                                                                         |     |
| =heap=                                                   | (mon osd mds)         | show heap usage info (available only if compiled with tcmalloc)                                                                                                                                                                                                                                                                                                      |     |
| =help=                                                   | (rgw mds mon osd mgr) | list available commands                                                                                                                                                                                                                                                                                                                                              |     |
| =injectargs=                                             | (rgw mds mon osd mgr) | inject configuration arguments into running daemon                                                                                                                                                                                                                                                                                                                   |     |
| =injectclearparityread=                                  | (osd)                 | Clear a parity read inject                                                                                                                                                                                                                                                                                                                                           |     |
| =injectdataerr=                                          | (osd)                 | inject data error to an object                                                                                                                                                                                                                                                                                                                                       |     |
| =injectecclearreaderr=                                   | (osd)                 | clear read error injects for object in an EC pool                                                                                                                                                                                                                                                                                                                    |     |
| =injectecclearwriteerr=                                  | (osd)                 | clear write error inject for object in an EC pool                                                                                                                                                                                                                                                                                                                    |     |
| =injectecreaderr=                                        | (osd)                 | inject error for read of object in an EC pool                                                                                                                                                                                                                                                                                                                        |     |
| =injectecwriteerr=                                       | (osd)                 | inject error for write of object in an EC pool                                                                                                                                                                                                                                                                                                                       |     |
| =injectfull=                                             | (osd)                 | Inject a full disk (optional count times)                                                                                                                                                                                                                                                                                                                            |     |
| =injectmdataerr=                                         | (osd)                 | inject metadata error to an object                                                                                                                                                                                                                                                                                                                                   |     |
| =injectparityread=                                       | (osd)                 | Tell the OSD to return the parity chunks along with the next read                                                                                                                                                                                                                                                                                                    |     |
| =list_devices=                                           | (osd)                 | list OSD devices.                                                                                                                                                                                                                                                                                                                                                    |     |
| =list_unfound=                                           | (osd)                 | list unfound objects on this pg, perhaps starting at an offset given in JSON                                                                                                                                                                                                                                                                                         |     |
| =log=                                                    | (osd)                 | dump pg_log of a specific pg                                                                                                                                                                                                                                                                                                                                         |     |
| =log dump=                                               | (rgw mds mon osd mgr) | dump recent log entries to log file                                                                                                                                                                                                                                                                                                                                  |     |
| =log flush=                                              | (rgw mds mon osd mgr) | flush log entries to log file                                                                                                                                                                                                                                                                                                                                        |     |
| =log reopen=                                             | (rgw mds mon osd mgr) | reopen log file                                                                                                                                                                                                                                                                                                                                                      |     |
| =mark_unfound_lost=                                      | (osd)                 | mark all unfound objects in this pg as lost, either removing or reverting to a prior version if one is available                                                                                                                                                                                                                                                     |     |
| =messenger dump=                                         | (rgw mds mon osd mgr) | dump messenger status                                                                                                                                                                                                                                                                                                                                                |     |
| =objecter_requests=                                      | (osd rgw mgr)         | show in-progress osd requests                                                                                                                                                                                                                                                                                                                                        |     |
| =ops=                                                    | (mon osd mds)         | show the ops currently in flight                                                                                                                                                                                                                                                                                                                                     |     |
| =perf dump=                                              | (rgw mds mon osd mgr) | dump non-labeled counters and their values                                                                                                                                                                                                                                                                                                                           |     |
| =perf histogram dump=                                    | (rgw mds mon osd mgr) | dump perf histogram values                                                                                                                                                                                                                                                                                                                                           |     |
| =perf histogram schema=                                  | (rgw mds mon osd mgr) | dump perf histogram schema                                                                                                                                                                                                                                                                                                                                           |     |
| =perf reset=                                             | (rgw mds mon osd mgr) | perf reset <name>: perf reset all or one perfcounter name                                                                                                                                                                                                                                                                                                            |     |
| =perf schema=                                            | (rgw mds mon osd mgr) | dump non-labeled counters schemas                                                                                                                                                                                                                                                                                                                                    |     |
| =query=                                                  | (osd)                 | show details of a specific pg                                                                                                                                                                                                                                                                                                                                        |     |
| =raise=                                                  | (rgw mds mon osd mgr) | deliver the <signal> to the daemon process, optionally delaying <after> seconds; when --after is used, the program will fork before sleeping, which allows to schedule signal delivery to a stopped daemon; it's possible to --cancel a pending signal delivery. <signal> can be in the forms '9', '-9', 'kill', '-KILL'. Use `raise -l` to list known signal names. |     |
| =reset_pg_recovery_stats=                                | (osd)                 | reset pg recovery statistics                                                                                                                                                                                                                                                                                                                                         |     |
| =reset_purged_snaps_last=                                | (osd)                 | Reset the superblock's purged_snaps_last                                                                                                                                                                                                                                                                                                                             |     |
| =rmomapkey=                                              | (osd)                 | remove omap key                                                                                                                                                                                                                                                                                                                                                      |     |
| =rotate-key=                                             | (osd mds rgw mgr)     | rotate live authentication key                                                                                                                                                                                                                                                                                                                                       |     |
| =rotate-stored-key=                                      | (osd)                 | Update the stored osd_key                                                                                                                                                                                                                                                                                                                                            |     |
| =schedule-deep-scrub=                                    | (osd)                 | Schedule a deep scrub                                                                                                                                                                                                                                                                                                                                                |     |
| =schedule-scrub=                                         | (osd)                 | Schedule a scrub                                                                                                                                                                                                                                                                                                                                                     |     |
| =scrub=                                                  | (osd)                 | Trigger a scrub                                                                                                                                                                                                                                                                                                                                                      |     |
| =scrub_purged_snaps=                                     | (osd)                 | Scrub purged_snaps vs snapmapper index                                                                                                                                                                                                                                                                                                                               |     |
| =scrubdebug=                                             | (osd)                 | debug the scrubber                                                                                                                                                                                                                                                                                                                                                   |     |
| =send_beacon=                                            | (osd)                 | send OSD beacon to mon immediately                                                                                                                                                                                                                                                                                                                                   |     |
| =set_heap_property=                                      | (osd)                 | update malloc extension heap property                                                                                                                                                                                                                                                                                                                                |     |
| =set_recovery_delay=                                     | (osd)                 | Delay osd recovery by specified seconds                                                                                                                                                                                                                                                                                                                              |     |
| =setomapheader=                                          | (osd)                 | set omap header                                                                                                                                                                                                                                                                                                                                                      |     |
| =setomapval=                                             | (osd)                 | set omap key                                                                                                                                                                                                                                                                                                                                                         |     |
| =smart=                                                  | (mon osd)             | Query health metrics for underlying device                                                                                                                                                                                                                                                                                                                           |     |
| =status=                                                 | (osd mds mgr)         | high-level status of MDS                                                                                                                                                                                                                                                                                                                                             |     |
| =trim stale osdmaps=                                     | (osd)                 | cleanup any existing osdmap from the store in the range of 0 up to the superblock's oldest_map.                                                                                                                                                                                                                                                                      |     |
| =truncobj=                                               | (osd)                 | truncate object to length                                                                                                                                                                                                                                                                                                                                            |     |
| =version=                                                | (rgw mds mon osd mgr) | get ceph version                                                                                                                                                                                                                                                                                                                                                     |     |
| =add_bootstrap_peer_hint=                                | (mon)                 | add peer address as potential bootstrap peer for cluster bringup                                                                                                                                                                                                                                                                                                     |     |
| =add_bootstrap_peer_hintv=                               | (mon)                 | add peer address vector as potential bootstrap peer for cluster bringup                                                                                                                                                                                                                                                                                              |     |
| =connection scores dump=                                 | (mon)                 | show the scores used in connectivity-based elections                                                                                                                                                                                                                                                                                                                 |     |
| =connection scores reset=                                | (mon)                 | reset the scores used in connectivity-based elections                                                                                                                                                                                                                                                                                                                |     |
| =mon_status=                                             | (mon)                 | report status of monitors                                                                                                                                                                                                                                                                                                                                            |     |
| =quorum enter=                                           | (mon)                 | force monitor back into quorum                                                                                                                                                                                                                                                                                                                                       |     |
| =quorum exit=                                            | (mon)                 | force monitor out of the quorum                                                                                                                                                                                                                                                                                                                                      |     |
| =sessions=                                               | (mon)                 | list existing sessions                                                                                                                                                                                                                                                                                                                                               |     |
| =sync_force=                                             | (mon)                 | force sync of and clear monitor store                                                                                                                                                                                                                                                                                                                                |     |
| =mgr_status=                                             | (mgr)                 | Dump mgr status                                                                                                                                                                                                                                                                                                                                                      |     |
| =client config=                                          | (mds)                 | Config a CephFS client session                                                                                                                                                                                                                                                                                                                                       |     |
| =client evict=                                           | (mds)                 | Evict client session(s) based on a filter                                                                                                                                                                                                                                                                                                                            |     |
| =client ls=                                              | (mds)                 | List client sessions based on a filter                                                                                                                                                                                                                                                                                                                               |     |
| =damage ls=                                              | (mds)                 | List detected metadata damage                                                                                                                                                                                                                                                                                                                                        |     |
| =damage rm=                                              | (mds)                 | Remove a damage table entry                                                                                                                                                                                                                                                                                                                                          |     |
| =dirfrag ls=                                             | (mds)                 | List fragments in directory                                                                                                                                                                                                                                                                                                                                          |     |
| =dirfrag merge=                                          | (mds)                 | De-fragment directory by path                                                                                                                                                                                                                                                                                                                                        |     |
| =dirfrag split=                                          | (mds)                 | Fragment directory by path                                                                                                                                                                                                                                                                                                                                           |     |
| =dump cache=                                             | (mds)                 | dump metadata cache (optionally to a file)                                                                                                                                                                                                                                                                                                                           |     |
| =dump dir=                                               | (mds)                 | dump directory by path                                                                                                                                                                                                                                                                                                                                               |     |
| =dump inode=                                             | (mds)                 | dump inode by inode number                                                                                                                                                                                                                                                                                                                                           |     |
| =dump loads=                                             | (mds)                 | dump metadata loads                                                                                                                                                                                                                                                                                                                                                  |     |
| =dump snaps=                                             | (mds)                 | dump snapshots                                                                                                                                                                                                                                                                                                                                                       |     |
| =dump stray=                                             | (mds)                 | dump stray folder content                                                                                                                                                                                                                                                                                                                                            |     |
| =dump tree=                                              | (mds)                 | dump metadata cache for subtree                                                                                                                                                                                                                                                                                                                                      |     |
| =dump_export_states=                                     | (mds)                 | dump export states                                                                                                                                                                                                                                                                                                                                                   |     |
| =exit=                                                   | (mds)                 | Terminate this MDS                                                                                                                                                                                                                                                                                                                                                   |     |
| =export dir=                                             | (mds)                 | migrate a subtree to named MDS                                                                                                                                                                                                                                                                                                                                       |     |
| =flush journal=                                          | (mds)                 | Flush the journal to the backing store                                                                                                                                                                                                                                                                                                                               |     |
| =flush_path=                                             | (mds)                 | flush an inode (and its dirfrags)                                                                                                                                                                                                                                                                                                                                    |     |
| =force_readonly=                                         | (mds)                 | Force MDS to read-only mode                                                                                                                                                                                                                                                                                                                                          |     |
| =get subtrees=                                           | (mds)                 | Return the subtree map                                                                                                                                                                                                                                                                                                                                               |     |
| =lock path=                                              | (mds)                 | lock a path                                                                                                                                                                                                                                                                                                                                                          |     |
| =lockup=                                                 | (mds)                 | sleep with mds_lock held (dev)                                                                                                                                                                                                                                                                                                                                       |     |
| =op get=                                                 | (mds)                 | get op                                                                                                                                                                                                                                                                                                                                                               |     |
| =op kill=                                                | (mds)                 | kill op                                                                                                                                                                                                                                                                                                                                                              |     |
| =openfiles ls=                                           | (mds)                 | List the opening files and their caps                                                                                                                                                                                                                                                                                                                                |     |
| =osdmap barrier=                                         | (mds)                 | Wait until the MDS has this OSD map epoch                                                                                                                                                                                                                                                                                                                            |     |
| =quiesce db=                                             | (mds)                 | submit queries to the local QuiesceDbManager                                                                                                                                                                                                                                                                                                                         |     |
| =quiesce path=                                           | (mds)                 | quiesce a subtree                                                                                                                                                                                                                                                                                                                                                    |     |
| =respawn=                                                | (mds)                 | Respawn this MDS                                                                                                                                                                                                                                                                                                                                                     |     |
| =scrub abort=                                            | (mds)                 | Abort in progress scrub operations(s)                                                                                                                                                                                                                                                                                                                                |     |
| =scrub pause=                                            | (mds)                 | Pause in progress scrub operations(s)                                                                                                                                                                                                                                                                                                                                |     |
| =scrub purge_status=                                     | (mds)                 | Purge status of scrub tag                                                                                                                                                                                                                                                                                                                                            | all |
| =scrub resume=                                           | (mds)                 | Resume paused scrub operations(s)                                                                                                                                                                                                                                                                                                                                    |     |
| =scrub start=                                            | (mds)                 | scrub and inode and output results                                                                                                                                                                                                                                                                                                                                   |     |
| =scrub status=                                           | (mds)                 | Status of scrub operations(s)                                                                                                                                                                                                                                                                                                                                        |     |
| =scrub_path=                                             | (mds)                 | scrub an inode and output results                                                                                                                                                                                                                                                                                                                                    |     |
| =session config=                                         | (mds)                 | Config a CephFS client session                                                                                                                                                                                                                                                                                                                                       |     |
| =session evict=                                          | (mds)                 | Evict client session(s) based on a filter                                                                                                                                                                                                                                                                                                                            |     |
| =session kill=                                           | (mds)                 | Evict a client session by id                                                                                                                                                                                                                                                                                                                                         |     |
| =session ls=                                             | (mds)                 | List client sessions based on a filter                                                                                                                                                                                                                                                                                                                               |     |
| =tag path=                                               | (mds)                 | Apply scrub tag recursively                                                                                                                                                                                                                                                                                                                                          |     |
| =cache erase=                                            | (rgw)                 | cache erase target: erase element from cache                                                                                                                                                                                                                                                                                                                         |     |
| =cache inspect=                                          | (rgw)                 | cache inspect target: print cache element                                                                                                                                                                                                                                                                                                                            |     |
| =cache list=                                             | (rgw)                 | cache list [filter_str]: list object cache, possibly matching substrings                                                                                                                                                                                                                                                                                             |     |
| =cache zap=                                              | (rgw)                 | cache zap: erase all elements from cache                                                                                                                                                                                                                                                                                                                             |     |
| =cr dump=                                                | (rgw)                 | dump current coroutines stack state                                                                                                                                                                                                                                                                                                                                  |     |
| =sync trace active=                                      | (rgw)                 | show active multisite sync entities information                                                                                                                                                                                                                                                                                                                      |     |
| =sync trace active_short=                                | (rgw)                 | show active multisite sync entities entries                                                                                                                                                                                                                                                                                                                          |     |
| =sync trace history=                                     | (rgw)                 | sync trace history [filter_str]: show history of multisite tracing information                                                                                                                                                                                                                                                                                       |     |
| =sync trace show=                                        | (rgw)                 | sync trace show [filter_str]: show current multisite tracing information                                                                                                                                                                                                                                                                                             |     |

** What commands are available on all services?
#+begin_src python :noweb no-export :tangle map.py
<<simpleasok>>
from collections import defaultdict

cluster = connect(pathlib.Path(ceph_config))
help = defaultdict(lambda : [set(), str()])
for group, targets in get_inventory(cluster).items():
    target = next(iter(targets))
    h = command_json(cluster, target, prefix="help")
    for k, v in h.items():
        help[k][0].add(group)
        help[k][1] = v
return [(f"={k}=", v[0], v[1]) for k, v in help.items() if len(v[0]) == 5]
#+end_src

#+RESULTS:
| =config diff=              | (mds osd rgw mon mgr) | dump diff of current config and default config                                                                                                                                                                                                                                                                                                                       |
| =config diff get=          | (mds osd rgw mon mgr) | dump diff get <field>: dump diff of current and default config setting <field>                                                                                                                                                                                                                                                                                       |
| =config get=               | (mds osd rgw mon mgr) | config get <field>: get the config value                                                                                                                                                                                                                                                                                                                             |
| =config help=              | (mds osd rgw mon mgr) | get config setting schema and descriptions                                                                                                                                                                                                                                                                                                                           |
| =config set=               | (mds osd rgw mon mgr) | config set <field> <val> [<val> ...]: set a config variable                                                                                                                                                                                                                                                                                                          |
| =config show=              | (mds osd rgw mon mgr) | dump current config settings                                                                                                                                                                                                                                                                                                                                         |
| =config unset=             | (mds osd rgw mon mgr) | config unset <field>: unset a config variable                                                                                                                                                                                                                                                                                                                        |
| =counter dump=             | (mds osd rgw mon mgr) | dump all labeled and non-labeled counters and their values                                                                                                                                                                                                                                                                                                           |
| =counter schema=           | (mds osd rgw mon mgr) | dump all labeled and non-labeled counters schemas                                                                                                                                                                                                                                                                                                                    |
| =dump_mempools=            | (mds osd rgw mon mgr) | get mempool stats                                                                                                                                                                                                                                                                                                                                                    |
| =get_command_descriptions= | (mds osd rgw mon mgr) | list available commands                                                                                                                                                                                                                                                                                                                                              |
| =git_version=              | (mds osd rgw mon mgr) | get git sha1                                                                                                                                                                                                                                                                                                                                                         |
| =help=                     | (mds osd rgw mon mgr) | list available commands                                                                                                                                                                                                                                                                                                                                              |
| =injectargs=               | (mds osd rgw mon mgr) | inject configuration arguments into running daemon                                                                                                                                                                                                                                                                                                                   |
| =log dump=                 | (mds osd rgw mon mgr) | dump recent log entries to log file                                                                                                                                                                                                                                                                                                                                  |
| =log flush=                | (mds osd rgw mon mgr) | flush log entries to log file                                                                                                                                                                                                                                                                                                                                        |
| =log reopen=               | (mds osd rgw mon mgr) | reopen log file                                                                                                                                                                                                                                                                                                                                                      |
| =messenger dump=           | (mds osd rgw mon mgr) | dump messenger status                                                                                                                                                                                                                                                                                                                                                |
| =perf dump=                | (mds osd rgw mon mgr) | dump non-labeled counters and their values                                                                                                                                                                                                                                                                                                                           |
| =perf histogram dump=      | (mds osd rgw mon mgr) | dump perf histogram values                                                                                                                                                                                                                                                                                                                                           |
| =perf histogram schema=    | (mds osd rgw mon mgr) | dump perf histogram schema                                                                                                                                                                                                                                                                                                                                           |
| =perf reset=               | (mds osd rgw mon mgr) | perf reset <name>: perf reset all or one perfcounter name                                                                                                                                                                                                                                                                                                            |
| =perf schema=              | (mds osd rgw mon mgr) | dump non-labeled counters schemas                                                                                                                                                                                                                                                                                                                                    |
| =raise=                    | (mds osd rgw mon mgr) | deliver the <signal> to the daemon process, optionally delaying <after> seconds; when --after is used, the program will fork before sleeping, which allows to schedule signal delivery to a stopped daemon; it's possible to --cancel a pending signal delivery. <signal> can be in the forms '9', '-9', 'kill', '-KILL'. Use `raise -l` to list known signal names. |
| =version=                  | (mds osd rgw mon mgr) | get ceph version                                                                                                                                                                                                                                                                                                                                                     |
** Visualization: Intersection Diagram
#+begin_src python :noweb no-export :file "./intersection.svg" :results graphics file value
<<simpleasok>>

from collections import defaultdict
from collections import Counter
from operator import itemgetter
from functools import reduce
from itertools import combinations
import matplotlib.pyplot as plt

plt.style.use('tableau-colorblind10')

cluster = connect(pathlib.Path(ceph_config))
by_target_type = defaultdict(set)
for group, targets in get_inventory(cluster).items():
    target = next(iter(targets))
    h = command_json(cluster, target, prefix="help")
    for k, v in h.items():
        by_target_type[group].add(k)

sets = [(type, len(cmds)) for type, cmds in by_target_type.items()]

keys = list(by_target_type.keys())
for intersections in range(2, len(keys)):
    for comb in combinations(keys, intersections):
        inter = reduce(set.intersection, (by_target_type[c] for c in comb))
        name = " ∩ ".join(comb)
        sets.append((name, len(inter)))
sets = sorted(sets, key=itemgetter(1), reverse=True)

fig, ax = plt.subplots()
ax.bar(range(len(sets)), list(map(itemgetter(1), sets)))
ax.set_xticks(range(len(sets)), list(map(itemgetter(0), sets)), rotation=45, ha="right")
ax.set_ylabel("Items in exact combination")
fig.patch.set_alpha(0)
ax.patch.set_alpha(0)
plt.tight_layout()
return fig
#+end_src

#+RESULTS:
[[file:./intersection.svg]]

** Intersections
#+begin_src python :noweb no-export
<<simpleasok>>

from collections import defaultdict
from collections import Counter
from operator import itemgetter
from functools import reduce
from itertools import combinations
import matplotlib.pyplot as plt

plt.style.use('tableau-colorblind10')

cluster = connect(pathlib.Path(ceph_config))
by_target_type = defaultdict(set)
for group, targets in get_inventory(cluster).items():
    target = next(iter(targets))
    h = command_json(cluster, target, prefix="help")
    for k, v in h.items():
        by_target_type[group].add(k)

common = reduce(set.intersection, (by_target_type[c] for c in by_target_type.keys()))
sets = []

keys = list(by_target_type.keys())
for intersections in range(2, len(keys)+1):
    for comb in combinations(keys, intersections):
        inter = reduce(set.intersection, (by_target_type[c] for c in comb))
        name = " ∩ ".join(comb)
        sets.append((name, len(inter), ", ".join((f"={x}=" for x in inter))))

for comb in combinations(keys, 2):
    inter = reduce(set.intersection, (by_target_type[c] for c in comb))
    minus_common = inter - common
    name = " ∩ ".join(comb) + " \\ intersection of all"
    sets.append((name, len(minus_common), ", ".join((f"={x}=" for x in minus_common))))
sets = sorted(sets, key=itemgetter(1), reverse=True)
return sets
#+end_src

#+RESULTS:
| osd ∩ mds                       | 37 | =git_version=, =log dump=, =config set=, =get_command_descriptions=, =dump_ops_in_flight=, =config help=, =dump_mempools=, =perf reset=, =config diff=, =log flush=, =perf dump=, =perf histogram schema=, =dump_blocked_ops_count=, =cpu_profiler=, =dump_historic_ops_by_duration=, =counter schema=, =cache status=, =config get=, =log reopen=, =perf histogram dump=, =dump_blocked_ops=, =heap=, =config diff get=, =messenger dump=, =status=, =ops=, =counter dump=, =rotate-key=, =config show=, =config unset=, =perf schema=, =raise=, =cache drop=, =version=, =dump_historic_ops=, =injectargs=, =help=           |
| osd ∩ mgr                       | 35 | =git_version=, =log dump=, =config set=, =dump_osd_network=, =dump_ops_in_flight=, =get_command_descriptions=, =config help=, =dump_mempools=, =perf reset=, =config diff=, =log flush=, =perf dump=, =perf histogram schema=, =dump_blocked_ops_count=, =counter schema=, =dump_historic_ops_by_duration=, =config get=, =log reopen=, =perf histogram dump=, =dump_blocked_ops=, =config diff get=, =messenger dump=, =status=, =counter dump=, =rotate-key=, =config show=, =config unset=, =perf schema=, =raise=, =version=, =dump_historic_slow_ops=, =objecter_requests=, =dump_historic_ops=, =injectargs=, =help= |
| osd ∩ mon                       | 33 | =git_version=, =log dump=, =config set=, =get_command_descriptions=, =dump_ops_in_flight=, =config help=, =dump_mempools=, =perf reset=, =config diff=, =smart=, =log flush=, =perf dump=, =perf histogram schema=, =counter schema=, =dump_historic_ops_by_duration=, =config get=, =log reopen=, =perf histogram dump=, =config diff get=, =heap=, =messenger dump=, =ops=, =counter dump=, =compact=, =config show=, =config unset=, =perf schema=, =raise=, =version=, =dump_historic_slow_ops=, =dump_historic_ops=, =injectargs=, =help=                                                                         |
| mgr ∩ mds                       | 32 | =git_version=, =log dump=, =config set=, =get_command_descriptions=, =dump_ops_in_flight=, =config help=, =dump_mempools=, =perf reset=, =config diff=, =log flush=, =perf dump=, =perf histogram schema=, =dump_blocked_ops_count=, =counter schema=, =dump_historic_ops_by_duration=, =config get=, =log reopen=, =perf histogram dump=, =dump_blocked_ops=, =config diff get=, =messenger dump=, =status=, =counter dump=, =rotate-key=, =config show=, =config unset=, =perf schema=, =raise=, =version=, =dump_historic_ops=, =injectargs=, =help=                                                              |
| osd ∩ mgr ∩ mds                 | 32 | =git_version=, =log dump=, =config set=, =get_command_descriptions=, =dump_ops_in_flight=, =dump_mempools=, =perf reset=, =config diff=, =log flush=, =perf dump=, =perf histogram schema=, =dump_blocked_ops_count=, =counter schema=, =dump_historic_ops_by_duration=, =config get=, =log reopen=, =perf histogram dump=, =dump_blocked_ops=, =config diff get=, =messenger dump=, =status=, =counter dump=, =injectargs=, =rotate-key=, =config show=, =config unset=, =perf schema=, =raise=, =version=, =dump_historic_ops=, =config help=, =help=                                                              |
| mon ∩ mds                       | 30 | =git_version=, =log dump=, =config set=, =get_command_descriptions=, =dump_ops_in_flight=, =config help=, =dump_mempools=, =perf reset=, =config diff=, =log flush=, =perf dump=, =perf histogram schema=, =counter schema=, =dump_historic_ops_by_duration=, =config get=, =log reopen=, =perf histogram dump=, =config diff get=, =heap=, =messenger dump=, =ops=, =counter dump=, =config show=, =config unset=, =perf schema=, =raise=, =version=, =dump_historic_ops=, =injectargs=, =help=                                                                                                                 |
| osd ∩ mon ∩ mds                 | 30 | =git_version=, =log dump=, =config set=, =get_command_descriptions=, =dump_ops_in_flight=, =dump_mempools=, =perf reset=, =config diff=, =log flush=, =perf dump=, =perf histogram schema=, =counter schema=, =dump_historic_ops_by_duration=, =config get=, =log reopen=, =perf histogram dump=, =config diff get=, =heap=, =messenger dump=, =ops=, =counter dump=, =injectargs=, =config show=, =config unset=, =perf schema=, =raise=, =version=, =dump_historic_ops=, =config help=, =help=                                                                                                                 |
| mon ∩ mgr                       | 29 | =git_version=, =log dump=, =config set=, =get_command_descriptions=, =dump_ops_in_flight=, =config help=, =dump_mempools=, =perf reset=, =config diff=, =log flush=, =perf dump=, =perf histogram schema=, =counter schema=, =dump_historic_ops_by_duration=, =config get=, =log reopen=, =perf histogram dump=, =config diff get=, =messenger dump=, =counter dump=, =config show=, =config unset=, =perf schema=, =raise=, =version=, =dump_historic_slow_ops=, =dump_historic_ops=, =injectargs=, =help=                                                                                                    |
| osd ∩ mon ∩ mgr                 | 29 | =git_version=, =log dump=, =config set=, =get_command_descriptions=, =dump_ops_in_flight=, =dump_mempools=, =perf reset=, =config diff=, =log flush=, =perf dump=, =perf histogram schema=, =counter schema=, =dump_historic_ops_by_duration=, =config get=, =log reopen=, =perf histogram dump=, =config diff get=, =messenger dump=, =counter dump=, =injectargs=, =config show=, =config unset=, =perf schema=, =raise=, =version=, =dump_historic_slow_ops=, =dump_historic_ops=, =config help=, =help=                                                                                                    |
| mon ∩ mgr ∩ mds                 | 28 | =git_version=, =log dump=, =config set=, =get_command_descriptions=, =dump_ops_in_flight=, =dump_mempools=, =perf reset=, =config diff=, =log flush=, =perf dump=, =perf histogram schema=, =counter schema=, =dump_historic_ops_by_duration=, =config get=, =log reopen=, =perf histogram dump=, =config diff get=, =messenger dump=, =counter dump=, =injectargs=, =config show=, =config unset=, =perf schema=, =raise=, =version=, =dump_historic_ops=, =config help=, =help=                                                                                                                            |
| osd ∩ mon ∩ mgr ∩ mds           | 28 | =git_version=, =log dump=, =config set=, =get_command_descriptions=, =dump_ops_in_flight=, =config help=, =dump_mempools=, =perf reset=, =config diff=, =log flush=, =perf dump=, =perf histogram schema=, =counter schema=, =dump_historic_ops_by_duration=, =config get=, =log reopen=, =perf histogram dump=, =config diff get=, =messenger dump=, =counter dump=, =config show=, =config unset=, =perf schema=, =raise=, =version=, =dump_historic_ops=, =injectargs=, =help=                                                                                                                            |
| osd ∩ rgw                       | 27 | =git_version=, =log dump=, =config set=, =get_command_descriptions=, =dump_mempools=, =perf reset=, =config diff=, =log flush=, =perf dump=, =perf histogram schema=, =counter schema=, =config get=, =log reopen=, =perf histogram dump=, =config diff get=, =messenger dump=, =counter dump=, =injectargs=, =rotate-key=, =config show=, =config unset=, =perf schema=, =raise=, =version=, =objecter_requests=, =config help=, =help=                                                                                                                                                                   |
| mgr ∩ rgw                       | 27 | =git_version=, =log dump=, =config set=, =get_command_descriptions=, =dump_mempools=, =perf reset=, =config diff=, =log flush=, =perf dump=, =perf histogram schema=, =counter schema=, =config get=, =log reopen=, =perf histogram dump=, =config diff get=, =messenger dump=, =counter dump=, =injectargs=, =rotate-key=, =config show=, =config unset=, =perf schema=, =raise=, =version=, =objecter_requests=, =config help=, =help=                                                                                                                                                                   |
| osd ∩ mgr ∩ rgw                 | 27 | =git_version=, =log dump=, =config set=, =get_command_descriptions=, =dump_mempools=, =perf reset=, =config diff=, =log flush=, =perf dump=, =perf histogram schema=, =counter schema=, =config get=, =log reopen=, =perf histogram dump=, =config diff get=, =messenger dump=, =counter dump=, =injectargs=, =rotate-key=, =config show=, =config unset=, =perf schema=, =raise=, =version=, =objecter_requests=, =config help=, =help=                                                                                                                                                                   |
| mds ∩ rgw                       | 26 | =git_version=, =log dump=, =config set=, =get_command_descriptions=, =dump_mempools=, =perf reset=, =config diff=, =log flush=, =perf dump=, =perf histogram schema=, =counter schema=, =config get=, =log reopen=, =perf histogram dump=, =config diff get=, =messenger dump=, =counter dump=, =injectargs=, =rotate-key=, =config show=, =config unset=, =perf schema=, =raise=, =version=, =config help=, =help=                                                                                                                                                                                      |
| osd ∩ mds ∩ rgw                 | 26 | =git_version=, =log dump=, =config set=, =get_command_descriptions=, =dump_mempools=, =perf reset=, =config diff=, =log flush=, =perf dump=, =perf histogram schema=, =counter schema=, =config get=, =log reopen=, =perf histogram dump=, =config diff get=, =messenger dump=, =counter dump=, =injectargs=, =rotate-key=, =config show=, =config unset=, =perf schema=, =raise=, =version=, =config help=, =help=                                                                                                                                                                                      |
| mgr ∩ mds ∩ rgw                 | 26 | =git_version=, =log dump=, =config set=, =get_command_descriptions=, =dump_mempools=, =perf reset=, =config diff=, =log flush=, =perf dump=, =perf histogram schema=, =counter schema=, =config get=, =log reopen=, =perf histogram dump=, =config diff get=, =messenger dump=, =counter dump=, =injectargs=, =rotate-key=, =config show=, =config unset=, =perf schema=, =raise=, =version=, =config help=, =help=                                                                                                                                                                                      |
| osd ∩ mgr ∩ mds ∩ rgw           | 26 | =git_version=, =log dump=, =config set=, =get_command_descriptions=, =config help=, =dump_mempools=, =perf reset=, =config diff=, =log flush=, =perf dump=, =perf histogram schema=, =counter schema=, =config get=, =log reopen=, =perf histogram dump=, =config diff get=, =messenger dump=, =counter dump=, =rotate-key=, =config show=, =config unset=, =perf schema=, =raise=, =version=, =injectargs=, =help=                                                                                                                                                                                      |
| mon ∩ rgw                       | 25 | =git_version=, =log dump=, =config set=, =get_command_descriptions=, =dump_mempools=, =perf reset=, =config diff=, =log flush=, =perf dump=, =perf histogram schema=, =counter schema=, =config get=, =log reopen=, =perf histogram dump=, =config diff get=, =messenger dump=, =counter dump=, =injectargs=, =config show=, =config unset=, =perf schema=, =raise=, =version=, =config help=, =help=                                                                                                                                                                                                  |
| osd ∩ mon ∩ rgw                 | 25 | =git_version=, =log dump=, =config set=, =get_command_descriptions=, =dump_mempools=, =perf reset=, =config diff=, =log flush=, =perf dump=, =perf histogram schema=, =counter schema=, =config get=, =log reopen=, =perf histogram dump=, =config diff get=, =messenger dump=, =counter dump=, =injectargs=, =config show=, =config unset=, =perf schema=, =raise=, =version=, =config help=, =help=                                                                                                                                                                                                  |
| mon ∩ mgr ∩ rgw                 | 25 | =git_version=, =log dump=, =config set=, =get_command_descriptions=, =dump_mempools=, =perf reset=, =config diff=, =log flush=, =perf dump=, =perf histogram schema=, =counter schema=, =config get=, =log reopen=, =perf histogram dump=, =config diff get=, =messenger dump=, =counter dump=, =injectargs=, =config show=, =config unset=, =perf schema=, =raise=, =version=, =config help=, =help=                                                                                                                                                                                                  |
| mon ∩ mds ∩ rgw                 | 25 | =git_version=, =log dump=, =config set=, =get_command_descriptions=, =dump_mempools=, =perf reset=, =config diff=, =log flush=, =perf dump=, =perf histogram schema=, =counter schema=, =config get=, =log reopen=, =perf histogram dump=, =config diff get=, =messenger dump=, =counter dump=, =injectargs=, =config show=, =config unset=, =perf schema=, =raise=, =version=, =config help=, =help=                                                                                                                                                                                                  |
| osd ∩ mon ∩ mgr ∩ rgw           | 25 | =git_version=, =log dump=, =config set=, =get_command_descriptions=, =config help=, =dump_mempools=, =perf reset=, =config diff=, =log flush=, =perf dump=, =perf histogram schema=, =counter schema=, =config get=, =log reopen=, =perf histogram dump=, =config diff get=, =messenger dump=, =counter dump=, =config show=, =config unset=, =perf schema=, =raise=, =version=, =injectargs=, =help=                                                                                                                                                                                                  |
| osd ∩ mon ∩ mds ∩ rgw           | 25 | =git_version=, =log dump=, =config set=, =get_command_descriptions=, =config help=, =dump_mempools=, =perf reset=, =config diff=, =log flush=, =perf dump=, =perf histogram schema=, =counter schema=, =config get=, =log reopen=, =perf histogram dump=, =config diff get=, =messenger dump=, =counter dump=, =config show=, =config unset=, =perf schema=, =raise=, =version=, =injectargs=, =help=                                                                                                                                                                                                  |
| mon ∩ mgr ∩ mds ∩ rgw           | 25 | =git_version=, =log dump=, =config set=, =get_command_descriptions=, =config help=, =dump_mempools=, =perf reset=, =config diff=, =log flush=, =perf dump=, =perf histogram schema=, =counter schema=, =config get=, =log reopen=, =perf histogram dump=, =config diff get=, =messenger dump=, =counter dump=, =config show=, =config unset=, =perf schema=, =raise=, =version=, =injectargs=, =help=                                                                                                                                                                                                  |
| osd ∩ mon ∩ mgr ∩ mds ∩ rgw     | 25 | =git_version=, =log dump=, =config set=, =get_command_descriptions=, =dump_mempools=, =perf reset=, =config diff=, =log flush=, =perf dump=, =perf histogram schema=, =counter schema=, =config get=, =log reopen=, =perf histogram dump=, =config diff get=, =messenger dump=, =counter dump=, =injectargs=, =config show=, =config unset=, =perf schema=, =raise=, =version=, =config help=, =help=                                                                                                                                                                                                  |
| osd ∩ mds \ intersection of all | 12 | =heap=, =cache drop=, =status=, =ops=, =dump_blocked_ops_count=, =cpu_profiler=, =dump_historic_ops_by_duration=, =cache status=, =rotate-key=, =dump_ops_in_flight=, =dump_historic_ops=, =dump_blocked_ops=                                                                                                                                                                                                                                                                                                                                                                |
| osd ∩ mgr \ intersection of all | 10 | =status=, =dump_blocked_ops_count=, =dump_historic_slow_ops=, =dump_historic_ops_by_duration=, =rotate-key=, =objecter_requests=, =dump_osd_network=, =dump_ops_in_flight=, =dump_historic_ops=, =dump_blocked_ops=                                                                                                                                                                                                                                                                                                                                                      |
| osd ∩ mon \ intersection of all |  8 | =heap=, =ops=, =dump_historic_slow_ops=, =dump_historic_ops_by_duration=, =compact=, =dump_ops_in_flight=, =dump_historic_ops=, =smart=                                                                                                                                                                                                                                                                                                                                                                                                                              |
| mgr ∩ mds \ intersection of all |  7 | =status=, =dump_blocked_ops_count=, =dump_historic_ops_by_duration=, =rotate-key=, =dump_ops_in_flight=, =dump_historic_ops=, =dump_blocked_ops=                                                                                                                                                                                                                                                                                                                                                                                                                   |
| mon ∩ mds \ intersection of all |  5 | =heap=, =ops=, =dump_historic_ops_by_duration=, =dump_ops_in_flight=, =dump_historic_ops=                                                                                                                                                                                                                                                                                                                                                                                                                                                                      |
| mon ∩ mgr \ intersection of all |  4 | =dump_ops_in_flight=, =dump_historic_slow_ops=, =dump_historic_ops_by_duration=, =dump_historic_ops=                                                                                                                                                                                                                                                                                                                                                                                                                                                         |
| osd ∩ rgw \ intersection of all |  2 | =objecter_requests=, =rotate-key|
| mgr ∩ rgw \ intersection of all |  2 | =objecter_requests=, =rotate-key=                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |
| mds ∩ rgw \ intersection of all |  1 | =rotate-key|
| mon ∩ rgw \ intersection of all |  0 ||

** Let's classify those common ones
|-------------------------------+---------------------------------------------+----------------------------------------------------|
| Config                        | Parameters                                  | Description                                        |
|-------------------------------+---------------------------------------------+----------------------------------------------------|
| =config=                        | diff, diff get, get, help, set, show, unset | current config                                     |
| =injectargs=                    |                                             | inject configuration arguments into running daemon |
|-------------------------------+---------------------------------------------+----------------------------------------------------|
| =counter=                       | dump, schema                                | performance counter                                |
| =perf=                          | dump, reset, schema                         |                                                    |
| =perf histogram=                | dump schema                                 |                                                    |
|-------------------------------+---------------------------------------------+----------------------------------------------------|
| =dump_historic_ops=             |                                             | recent ops                                         |
| =dump_historic_ops_by_duration= |                                             | recent ops by duration                             |
| =dump_ops_in_flight=            |                                             | ops in flight                                      |
|                               |                                             |                                                    |
|-------------------------------+---------------------------------------------+----------------------------------------------------|
| =dump_mempools=                 |                                             | mempool stats                                      |
|-------------------------------+---------------------------------------------+----------------------------------------------------|
| =get_command_descriptions=      |                                             | list available commands                            |
| =help=                          |                                             | list available commands                            |
|-------------------------------+---------------------------------------------+----------------------------------------------------|
| =git_version=                   |                                             | git version                                        |
| =version=                       |                                             | ceph version                                       |
|-------------------------------+---------------------------------------------+----------------------------------------------------|
| =log=                           | dump, flush, reopen                         | log file                                           |
|-------------------------------+---------------------------------------------+----------------------------------------------------|
| =messenger dump=                |                                             | dump messenger status                              |
|-------------------------------+---------------------------------------------+----------------------------------------------------|
| =raise=                         |                                             | deliver signal                                     |
| =abort=                       |                                             | abort daemon                                       |
|-------------------------------+---------------------------------------------+----------------------------------------------------|

** Unique commands
#+begin_src python :noweb no-export :file "./difference.svg" :results graphics file value
<<simpleasok>>

from collections import defaultdict
from collections import Counter
from operator import itemgetter
from functools import reduce
from itertools import combinations
import matplotlib.pyplot as plt

plt.style.use('tableau-colorblind10')

cluster = connect(pathlib.Path(ceph_config))
by_target_type = defaultdict(set)
for group, targets in get_inventory(cluster).items():
    target = next(iter(targets))
    h = command_json(cluster, target, prefix="help")
    for k, v in h.items():
        by_target_type[group].add(k)

sets = [(type, len(cmds)) for type, cmds in by_target_type.items()]

keys = list(by_target_type.keys())
for intersections in range(2, len(keys)+1):
    for comb in combinations(keys, intersections):
        inter = reduce(set.difference, (by_target_type[c] for c in comb))
        name = " / ".join(comb)
        sets.append((name, len(inter)))
sets = sorted(sets, key=itemgetter(1), reverse=True)

fig, ax = plt.subplots()
ax.bar(range(len(sets)), list(map(itemgetter(1), sets)))
ax.set_xticks(range(len(sets)), list(map(itemgetter(0), sets)), rotation=45, ha="right")
ax.set_ylabel("Items in exact combination")
fig.patch.set_alpha(0)
ax.patch.set_alpha(0)
plt.tight_layout()
return fig
#+end_src

#+RESULTS:
[[file:./difference.svg]]

#+begin_src python :noweb no-export
<<simpleasok>>

from collections import defaultdict
from collections import Counter
from operator import itemgetter
from functools import reduce
from itertools import permutations
import matplotlib.pyplot as plt

plt.style.use('tableau-colorblind10')

cluster = connect(pathlib.Path(ceph_config))
by_target_type = defaultdict(set)
for group, targets in get_inventory(cluster).items():
    target = next(iter(targets))
    h = command_json(cluster, target, prefix="help")
    for k, v in h.items():
        by_target_type[group].add(k)

keys = set(by_target_type.keys())
sets = []
for type in keys:
    other_keys = keys.copy()
    other_keys.remove(type)
    diff = by_target_type[type].difference(*[by_target_type[c] for c in other_keys])
    name = f"{type} \\ ({"∪".join(other_keys)})"
    sets.append((name, len(diff), ", ".join((f"={d}=" for d in diff))))
sets = sorted(sets, key=itemgetter(1), reverse=True)
return sets
#+end_src

#+RESULTS:
| osd \ (mgr∪mon∪rgw∪mds) | 75 | =set_heap_property=, =bluefs stats=, =truncobj=, =bluestore allocator fragmentation bluefs-wal=, =bluestore collections=, =bluestore allocator dump bluefs-db=, =scrub_purged_snaps=, =get_mapped_pools=, =debug dump_missing=, =flush_journal=, =dump_blocklist=, =dump_pool_statfs=, =injectparityread=, =scrubdebug=, =injectfull=, =rotate-stored-key=, =bluefs files list=, =injectecwriteerr=, =dump_scrubs=, =bluestore list=, =bench=, =bluestore onode metadata=, =rmomapkey=, =flush_store_cache=, =bluestore allocator fragmentation histogram bluefs-wal=, =injectdataerr=, =flush_pg_stats=, =schedule-deep-scrub=, =get_heap_property=, =setomapval=, =bluestore allocator fragmentation histogram bluefs-db=, =dump_op_pq_state=, =bluestore allocator fragmentation block=, =dump_objectstore_kv_stats=, =scrub=, =mark_unfound_lost=, =dump_scrub_reservations=, =bluestore allocator fragmentation histogram block=, =injectclearparityread=, =set_recovery_delay=, =dump_pgstate_history=, =dump_pg_recovery_stats=, =injectecclearwriteerr=, =clear_shards_repaired=, =bluestore allocator dump block=, =bluestore allocator fragmentation bluefs-db=, =reset_purged_snaps_last=, =injectecreaderr=, =schedule-scrub=, =injectecclearreaderr=, =getomap=, =bluestore bluefs device info=, =send_beacon=, =bluestore allocator score bluefs-db=, =dump_watchers=, =get_latest_osdmap=, =calc_objectstore_db_histogram=, =debug kick_recovery_wq=, =list_unfound=, =bluestore allocator dump bluefs-wal=, =bluestore allocator score bluefs-wal=, =injectmdataerr=, =setomapheader=, =trim stale osdmaps=, =dump_recovery_reservations=, =list_devices=, =query=, =bluestore allocator score block=, =log=, =reset_pg_recovery_stats=, =deep-scrub=, =bluefs debug_inject_read_zeros=, =bluestore compression stats=, =dump_osd_pg_stats=, =cluster_log= |
| mds \ (mgr∪osd∪mon∪rgw) | 43 | =quiesce db=, =session evict=, =scrub resume=, =lock path=, =dump tree=, =session kill=, =tag path=, =client evict=, =damage ls=, =scrub purge_status=, =client config=, =scrub status=, =osdmap barrier=, =get subtrees=, =scrub start=, =dump_export_states=, =lockup=, =dirfrag merge=, =damage rm=, =op kill=, =dump dir=, =flush journal=, =scrub abort=, =respawn=, =dump snaps=, =export dir=, =scrub pause=, =op get=, =dump loads=, =session ls=, =dirfrag ls=, =session config=, =quiesce path=, =flush_path=, =dump cache=, =force_readonly=, =dump inode=, =dirfrag split=, =scrub_path=, =exit=, =dump stray=, =openfiles ls=, =client ls|
| rgw \ (mgr∪osd∪mon∪mds) |  9 | =sync trace show=, =sync trace active=, =cache erase=, =cache list=, =cr dump=, =cache zap=, =sync trace active_short=, =sync trace history=, =cache inspect|
| mon \ (mgr∪osd∪rgw∪mds) |  9 | =connection scores dump=, =sync_force=, =sessions=, =add_bootstrap_peer_hintv=, =mon_status=, =quorum exit=, =add_bootstrap_peer_hint=, =quorum enter=, =connection scores reset|
| mgr \ (osd∪mon∪rgw∪mds) |  1 | =mgr_status|
** UpSet Plot
#+begin_src python :var tab=all_commands :noweb no-export :file "./upset.svg" :results graphics file :python .venv/bin/python3
import matplotlib.pyplot as plt
import sys
from upsetplot import from_memberships, UpSet

def parse_groups(tab):
    return [services.replace("(","").replace(")","").split()
            for cmd, services, _help, _ in tab]

groups = parse_groups(tab)
print(groups[:10], file=sys.stderr)
upset_data = from_memberships(groups)

fig = plt.figure(figsize=(14,7))

upset_plot = UpSet(
    upset_data, sort_by="cardinality", show_counts=True, min_subset_size=1, subset_size="count"
)
upset_plot.plot(fig=fig)
plt.tight_layout()
return fig
#+end_src

#+RESULTS:
[[file:./upset.svg]]


** Hidden Asok Commands
- abort
- assert
- leak_some_memory

* One-Liners
** Configuration Overview
#+begin_src bash :noweb no-export :results output verbatim
<<env>>

ceph daemon $out/radosgw.8000.asok config diff | jq -r '
.diff | to_entries | map(.key as $k | .value as $conf | "\($k) | final:\($conf.final) | " + ([["def", $conf.default], ["mon", $conf.mon], ["file", $conf.file], ["env", $conf.env], ["cmd", $conf.cmdline], ["run", $conf.override]] | map(select(.[1] != null)) |  map(join(":")) | join(" → ")    )) | .[]'

#+end_src

#+RESULTS:
#+begin_example
admin_socket | final:/compile2/ceph/wip/build/out/radosgw.8000.asok | def:$run_dir/$cluster-$name.$pid.$cctid.asok → file:/compile2/ceph/wip/build/out/radosgw.8000.asok → cmd:/compile2/ceph/wip/build/out/radosgw.8000.asok
auth_client_required | final:cephx | def:cephx → file:cephx
auth_cluster_required | final:cephx | def:cephx → file:cephx
auth_service_required | final:cephx | def:cephx → file:cephx
crash_dir | final:/compile2/ceph/wip/build/out | def:/var/lib/ceph/crash → file:/compile2/ceph/wip/build/out
debug_asok_assert_abort | final:true | def:false → file:true
debug_rgw | final:1/5 | def:1/5
debug_rgw_flight | final:20/20 | def:1/5 → file:20/20
debug_rgw_notification | final:20/20 | def:1/5 → file:20/20
enable_experimental_unrecoverable_data_corrupting_features | final:* | def: → file:*
erasure_code_dir | final:/compile2/ceph/wip/build/lib | def:/usr/local/lib64/ceph/erasure-code → file:/compile2/ceph/wip/build/lib
fsid | final:d2135fc7-bf9d-4325-97b9-9c054bc1d0e7 | def:00000000-0000-0000-0000-000000000000 → file:d2135fc7-bf9d-4325-97b9-9c054bc1d0e7 → run:d2135fc7-bf9d-4325-97b9-9c054bc1d0e7
host | final:janelane | def: → run:janelane
keyring | final:/compile2/ceph/wip/build/keyring | def:$rgw_data/keyring → file:/compile2/ceph/wip/build/keyring
lockdep | final:true | def:false → file:true
log_file | final:/compile2/ceph/wip/build/out/radosgw.8000.log | def:/var/log/ceph/$cluster-$name.log → file:/compile2/ceph/wip/build/out/$name.$pid.log → cmd:/compile2/ceph/wip/build/out/radosgw.8000.log
mon_host | final:[v2:192.168.101.23:40531,v1:192.168.101.23:40532] [v2:192.168.101.23:40533,v1:192.168.101.23:40534] [v2:192.168.101.23:40535,v1:192.168.101.23:40536] | def: → file:[v2:192.168.101.23:40531,v1:192.168.101.23:40532] [v2:192.168.101.23:40533,v1:192.168.101.23:40534] [v2:192.168.101.23:40535,v1:192.168.101.23:40536]
mon_max_pg_per_osd | final:1000 | def:250 → file:1000
mon_osd_backfillfull_ratio | final:0.98999999999999999 | def:0.90000000000000002 → file:0.98999999999999999
mon_osd_full_ratio | final:0.98999999999999999 | def:0.94999999999999996 → file:0.98999999999999999
mon_osd_nearfull_ratio | final:0.98999999999999999 | def:0.84999999999999998 → file:0.98999999999999999
ms_bind_msgr1 | final:true | def:true → file:true
ms_bind_msgr2 | final:true | def:true → file:true
ms_mon_client_mode | final:secure | def:secure
no_config_file | final:false | def:false → run:false
objecter_inflight_ops | final:24576 | def:24576
osd_crush_chooseleaf_type | final:0 | def:1 → file:0
osd_failsafe_full_ratio | final:0.98999999999999999 | def:0.96999999999999997 → file:0.98999999999999999
osd_pool_default_min_size | final:1 | def:0 → mon:1
osd_pool_default_size | final:3 | def:3 → mon:3
pid_file | final:/compile2/ceph/wip/build/out/radosgw.8000.pid | def: → cmd:/compile2/ceph/wip/build/out/radosgw.8000.pid
plugin_dir | final:/compile2/ceph/wip/build/lib | def:/usr/local/lib64/ceph → file:/compile2/ceph/wip/build/lib
rbd_default_features | final:61 | def:61
rbd_qos_exclude_ops | final:0 | def:0
rgw_crypt_require_ssl | final:true | def:true → file:false → run:true
rgw_crypt_s3_kms_backend | final:testing | def:barbican → file:testing
rgw_crypt_s3_kms_encryption_keys | final:testkey-1=YmluCmJvb3N0CmJvb3N0LWJ1aWxkCmNlcGguY29uZgo= testkey-2=aWIKTWFrZWZpbGUKbWFuCm91dApzcmMKVGVzdGluZwo= | def: → file:testkey-1=YmluCmJvb3N0CmJvb3N0LWJ1aWxkCmNlcGguY29uZgo= testkey-2=aWIKTWFrZWZpbGUKbWFuCm91dApzcmMKVGVzdGluZwo=
rgw_frontends | final:beast port=8000 | def:beast port=7480 → file:beast port=8000 → cmd:beast port=8000
rgw_luarocks_location | final:/compile2/ceph/wip/build/out/radosgw.8000.luarocks | def:/tmp/rgw_luarocks/$name → cmd:/compile2/ceph/wip/build/out/radosgw.8000.luarocks
rgw_s3_auth_use_sts | final:true | def:false → file:true
rgw_sts_key | final:abcdefghijklmnop | def: → file:abcdefghijklmnop
run_dir | final:/compile2/ceph/wip/build/out | def:/var/run/ceph → file:/compile2/ceph/wip/build/out
#+end_example

** Configuration Diff
#+caption: Show diff between defaults and final configuration
#+begin_src bash :noweb no-export :results output verbatim
<<env>>
  diff -Nur <(ceph daemon $out/radosgw.8000.asok config diff | jq -r '.diff | to_entries | map(.key as $k | .value as $conf | "\($k) → \($conf.default)") | .[]' | sort) <(ceph daemon $out/radosgw.8000.asok config diff | jq -r '.diff | to_entries | map(.key as $k | .value as $conf | "\($k) → \($conf.final)") | .[]' | sort)
#+end_src

#+RESULTS:
#+begin_example
--- /dev/fd/63	2025-10-14 09:54:25.739318798 +0200
+++ /dev/fd/62	2025-10-14 09:54:25.739318798 +0200
@@ -1,42 +1,42 @@
-admin_socket → $run_dir/$cluster-$name.$pid.$cctid.asok
+admin_socket → /compile2/ceph/wip/build/out/radosgw.8000.asok
 auth_client_required → cephx
 auth_cluster_required → cephx
 auth_service_required → cephx
-crash_dir → /var/lib/ceph/crash
-debug_asok_assert_abort → false
+crash_dir → /compile2/ceph/wip/build/out
+debug_asok_assert_abort → true
 debug_rgw → 1/5
-debug_rgw_flight → 1/5
-debug_rgw_notification → 1/5
-enable_experimental_unrecoverable_data_corrupting_features →
-erasure_code_dir → /usr/local/lib64/ceph/erasure-code
-fsid → 00000000-0000-0000-0000-000000000000
-host →
-keyring → $rgw_data/keyring
-lockdep → false
-log_file → /var/log/ceph/$cluster-$name.log
-mon_host →
-mon_max_pg_per_osd → 250
-mon_osd_backfillfull_ratio → 0.90000000000000002
-mon_osd_full_ratio → 0.94999999999999996
-mon_osd_nearfull_ratio → 0.84999999999999998
+debug_rgw_flight → 20/20
+debug_rgw_notification → 20/20
+enable_experimental_unrecoverable_data_corrupting_features → *
+erasure_code_dir → /compile2/ceph/wip/build/lib
+fsid → d2135fc7-bf9d-4325-97b9-9c054bc1d0e7
+host → janelane
+keyring → /compile2/ceph/wip/build/keyring
+lockdep → true
+log_file → /compile2/ceph/wip/build/out/radosgw.8000.log
+mon_host → [v2:192.168.101.23:40531,v1:192.168.101.23:40532] [v2:192.168.101.23:40533,v1:192.168.101.23:40534] [v2:192.168.101.23:40535,v1:192.168.101.23:40536]
+mon_max_pg_per_osd → 1000
+mon_osd_backfillfull_ratio → 0.98999999999999999
+mon_osd_full_ratio → 0.98999999999999999
+mon_osd_nearfull_ratio → 0.98999999999999999
 ms_bind_msgr1 → true
 ms_bind_msgr2 → true
 ms_mon_client_mode → secure
 no_config_file → false
 objecter_inflight_ops → 24576
-osd_crush_chooseleaf_type → 1
-osd_failsafe_full_ratio → 0.96999999999999997
-osd_pool_default_min_size → 0
+osd_crush_chooseleaf_type → 0
+osd_failsafe_full_ratio → 0.98999999999999999
+osd_pool_default_min_size → 1
 osd_pool_default_size → 3
-pid_file →
-plugin_dir → /usr/local/lib64/ceph
+pid_file → /compile2/ceph/wip/build/out/radosgw.8000.pid
+plugin_dir → /compile2/ceph/wip/build/lib
 rbd_default_features → 61
 rbd_qos_exclude_ops → 0
 rgw_crypt_require_ssl → true
-rgw_crypt_s3_kms_backend → barbican
-rgw_crypt_s3_kms_encryption_keys →
-rgw_frontends → beast port=7480
-rgw_luarocks_location → /tmp/rgw_luarocks/$name
-rgw_s3_auth_use_sts → false
-rgw_sts_key →
-run_dir → /var/run/ceph
+rgw_crypt_s3_kms_backend → testing
+rgw_crypt_s3_kms_encryption_keys → testkey-1=YmluCmJvb3N0CmJvb3N0LWJ1aWxkCmNlcGguY29uZgo= testkey-2=aWIKTWFrZWZpbGUKbWFuCm91dApzcmMKVGVzdGluZwo=
+rgw_frontends → beast port=8000
+rgw_luarocks_location → /compile2/ceph/wip/build/out/radosgw.8000.luarocks
+rgw_s3_auth_use_sts → true
+rgw_sts_key → abcdefghijklmnop
+run_dir → /compile2/ceph/wip/build/out
#+end_example


** Connections
#+caption: Get all open connections to Ceph services
#+begin_src  bash :noweb no-export :results output verbatim
<<env>>
for msg in $(ceph daemon $out/radosgw.8000.asok messenger dump | jq -r '.messengers[]')
do
        echo "$msg"
        ceph daemon $out/radosgw.8000.asok messenger dump $msg | jq -r '.messenger.connections | map(.async_connection | select(.status.connected) | " ⮡ \(.peer.type) \(.target_addr.type):\(.target_addr.addr) \(.target_addr.nonce)") | .[]'
done
#+end_src

#+RESULTS:
#+begin_example
radosclient-10888001826886228263
 ⮡ mgr v2:192.168.101.23:6800 2098926626
 ⮡ mon v2:192.168.101.23:40535 0
radosclient-9148977104229755266
 ⮡ mgr v2:192.168.101.23:6800 2098926626
 ⮡ osd v2:192.168.101.23:6818 2358880671
 ⮡ osd v2:192.168.101.23:6810 2237892721
 ⮡ osd v2:192.168.101.23:6802 2820557489
 ⮡ mon v2:192.168.101.23:40535 0
radosclient-9260873787875441259
 ⮡ mgr v2:192.168.101.23:6800 2098926626
 ⮡ osd v2:192.168.101.23:6818 2358880671
 ⮡ osd v2:192.168.101.23:6810 2237892721
 ⮡ osd v2:192.168.101.23:6802 2820557489
 ⮡ mon v2:192.168.101.23:40533 0
#+end_example

#+begin_src bash  bash :noweb no-export :results output verbatim
<<env>>

for msg in $(ceph tell osd.0 messenger dump | jq -r '.messengers[]')
do
        echo "$msg"
        ceph tell osd.0 messenger dump $msg 2> /dev/null | jq -r '.messenger.connections | map(.async_connection | select(.status.connected) | " ⮡ \(.peer.type).\(.peer.global_id) \(.target_addr.type):\(.target_addr.addr)") | .[]'
done
#+end_src

#+RESULTS:
#+begin_example
client
 ⮡ mgr.4119 any:192.168.101.23:0
 ⮡ mgr.0 v2:192.168.101.23:6800
 ⮡ client.4487 any:192.168.101.23:0
 ⮡ client.9281 any:192.168.101.23:0
 ⮡ client.4479 any:192.168.101.23:0
 ⮡ mon.0 v2:192.168.101.23:40531
cluster
 ⮡ osd.0 v2:192.168.101.23:6812
 ⮡ osd.4200 v2:192.168.101.23:6820
hb_back_client
 ⮡ osd.0 v2:192.168.101.23:6824
 ⮡ osd.0 v2:192.168.101.23:6816
hb_back_server
hb_front_client
 ⮡ osd.0 v2:192.168.101.23:6822
 ⮡ osd.0 v2:192.168.101.23:6814
hb_front_server
ms_objecter
#+end_example

* RTT Matrix

#+begin_src python :noweb no-export :file "./rttmatrix.svg" :results graphics file value :tangle rttmatrix.py :tangle rttmatrix.py
<<simpleasok>>

<<messenger_dump>>

from operator import itemgetter
from functools import reduce
from collections import defaultdict
from itertools import permutations, chain
import matplotlib.pyplot as plt
import numpy as np
import textwrap

plt.style.use('tableau-colorblind10')

cluster = connect(pathlib.Path(ceph_config))
all_targets = list(chain(*get_inventory(cluster).values()))
n_targets = len(all_targets)
#all_targets = get_inventory(cluster)["osd"]

def format_timedelta_compact(d: timedelta) -> str:
    total_sec = d.total_seconds()
    if total_sec >= 1:
        return f"{total_sec:.0f}"
    elif total_sec >= 1e-3:
        return f"{total_sec * 1e3:.0f}m"
    elif total_sec == 0:
        return "0"
    else:
        return f"{total_sec * 1e6:.0f}µ"

def all_msgrs_outgoing_connections(target):
    msgrs = dump_messengers(cluster, target, discover_messengers(cluster, target))

    return {(c.async_connection.target_addr.type, c.async_connection.target_addr.addr, c.async_connection.target_addr.nonce):
            (m_name, c.async_connection.tcp_info.tcpi_rtt)
            for m_name, m in msgrs.items()
            for c in m.connections
            if c.async_connection.status.connected and m.direction(c.async_connection) == "OUT" and not m_name.startswith("hb_")
            }

def all_msgrs_listen(target):
    msgrs = dump_messengers(cluster, target, discover_messengers(cluster, target))
    return set([
        (a.type, a.addr, a.nonce)
        for m in msgrs.values()
        for a in m.my_addrs.addrvec])

result = defaultdict(list)
for src_t in all_targets:
    for dst_t in all_targets:
        src_outgoing = all_msgrs_outgoing_connections(src_t)
        dst_listen = all_msgrs_listen(dst_t)
        connections = src_outgoing.keys() & dst_listen
        for con in connections:
            src_outgoing_data = src_outgoing[con]
            result[(src_t, dst_t)].append(src_outgoing_data)

fig, ax = plt.subplots()

# X axis: destinations
# Y axis: sources

ax.set_title("Max RTT Source → Destination [seconds]")
ax.set_xticks(range(n_targets), labels=(str(t) for t in all_targets), rotation=45, ha="right", rotation_mode="anchor", fontsize=8)
ax.set_xlabel("Destination")
ax.set_yticks(range(n_targets), labels=reversed([str(t) for t in all_targets]), fontsize=8)
ax.set_ylabel("Source")
ax.spines[:].set_visible(False)

val_array=[[0 for i in range(n_targets)] for j in range(n_targets)]
for x, dst in enumerate(all_targets):
    for y, src in enumerate(reversed(all_targets)):
        data = max([v[1] for v in result[(src, dst)]] + [timedelta(0)])
        if src != dst:
            ax.text(x, y, format_timedelta_compact(data), ha="center", va="center", fontsize=8, color="w")
        val_array[y][x] = data.total_seconds()

im = ax.imshow(val_array)
fig.tight_layout()
return fig

#+end_src

#+RESULTS:
[[file:./rttmatrix.svg]]
